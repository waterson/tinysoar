dnl -*- Mode: m4 -*-
AC_PREREQ(2.12)
AC_INIT(soar.h)

dnl Deal with cross-compilation.
if test "$target" = "$host"; then
  dnl We're doing a normal compile for the host architecture.

  dnl By default, this'll give us `-g -O2'. Set CFLAGS if you want
  dnl something else.
  AC_PROG_CC

  AC_CHECK_PROG(AR, ar, ar, :)
  AC_PROG_RANLIB
  AC_PROG_INSTALL

  AC_CHECK_SIZEOF(int, 4)
else
  dnl We're doing a cross-compile. I _thought_ AC_PROG_CC was supposed to
  dnl detect this sort of thing, but apparently it doesn't.
  AR=${target}-ar
  RANLIB=${target}-ranlib
  CC=${target}-gcc
  CPP="$CC -E"

  SIZEOF_INT=0
  AC_ARG_WITH(sizeof-int,
    [ --with-sizeof-int=<size> Specify the word size for a cross-compile ],
    [ if test -n "$withval"; then
        SIZEOF_INT="$withval"
      fi ])

  if test "$SIZEOF_INT" = "0"; then
    AC_MSG_ERROR([You did not specify an integer size; reconfigure using --with-sizeof-int=<value>.])
  fi

  AC_DEFINE_UNQUOTED(SIZEOF_INT,$SIZEOF_INT)
fi

dnl Checks for other required programs.
AC_PROG_LEX
AC_PROG_YACC

dnl Checks for header files.
AC_HEADER_STDC
AC_CHECK_HEADERS(malloc.h)

dnl Checks for typedefs, structures, and compiler characteristics.
AC_C_CONST
AC_C_INLINE

dnl Checks for library functions.
AC_FUNC_VPRINTF
AC_CHECK_FUNC(printf, AC_DEFINE(HAVE_PRINTF))

dnl ----------------------------------------------------------------------
dnl
dnl Configuration Options
dnl

RETE_CREATE="yes"
AC_ARG_WITH(rete-create,
[  --without-rete-create   Do not include RETE creation code],
[  if test "$withval" = "no"; then
     RETE_CREATE="no"
   fi ])

if test "$RETE_CREATE" = "yes"; then
  AC_DEFINE(CONF_SOAR_RETE_CREATE)
fi

AC_SUBST(AR)
AC_SUBST(CC)
AC_SUBST(RANLIB)

AC_CONFIG_HEADER(defs.h)

AC_OUTPUT(Makefile)
