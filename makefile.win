CFLAGS=/nologo /W3 /DWINDOWS
LINK=link

# for debugging the rule grammar
!ifdef YYDEBUG
CFLAGS=$(CFLAGS) /DYYDEBUG=1
!endif

!ifdef BUILD_OPT
CFLAGS=$(CFLAGS) /O1 /DNDEBUG /UDEBUG
LFLAGS=$(LFLAGS)
!else
CFLAGS=$(CFLAGS) /Zi /Od /UNDEBUG /DDEBUG /MDd
LFLAGS=$(LFLAGS) /debug
!endif

SHARED_OBJS = \
	ht.obj \
	debug.obj \
        $(NULL)        

RUNTIME_OBJS = \
	agent.obj \
        chunk.obj \
	rete.obj \
	wmem.obj \
        $(NULL)

PARSER_OBJS = \
        y.tab.obj \
        lex.yy.obj \
        prod.obj \
        symtab.obj \
        $(NULL)

TINYSOAR_OBJS = \
        tinysoar.obj \
        export.obj \
        $(NULL)

all: tinysoar.dll

y.tab.obj: y.tab.c

y.tab.c y.tab.h: rule.y
        bison --yacc --defines $**

lex.yy.c: rule.l
        flex $**

lex.yy.obj: lex.yy.c y.tab.h

TCL_DIR=c:\tcl

TINYSOAR_LIBS=$(TCL_DIR)\lib\tcl83.lib

tinysoar.dll: $(TINYSOAR_OBJS) $(PARSER_OBJS) $(RUNTIME_OBJS) $(SHARED_OBJS)
        $(LINK) $(LFLAGS) $(TINYSOAR_LIBS) /dll /out:$@ $**

tinysoar.obj: tinysoar.c soar.h symtab.h parser.h alloc.h config.h defs.h
        $(CC) /c $(CFLAGS) /I$(TCL_DIR)\include tinysoar.c

alloc.obj: alloc.c alloc.h config.h defs.h
agent.obj: agent.c soar.h alloc.h config.h defs.h ht.h
chunk.obj: chunk.c soar.h alloc.h config.h defs.h ht.h rete.h
debug.obj: debug.c config.h soar.h ht.h symtab.h defs.h
export.obj: export.c soar.h ht.h symtab.h alloc.h config.h defs.h
ht.obj: ht.c ht.h alloc.h config.h defs.h
prod.obj: prod.c soar.h rete.h alloc.h config.h defs.h
rete.obj: rete.c soar.h rete.h alloc.h config.h defs.h
runtime.obj: runtime.c config.h defs.h
symtab.obj: symtab.c soar.h config.h defs.h
wmem.obj: wmem.c soar.h ht.h alloc.h config.h defs.h

defs.h:
        echo /* Generated by makefile.win */ > $@
        echo #define inline __inline >> $@
        echo #define HAVE_MALLOC_H 1 >> $@
        echo #define HAVE_STRING_H 1 >> $@
        echo #define HAVE_VPRINTF 1 >> $@
        echo #define HAVE_PRINTF 1 >> $@
        echo #define SIZEOF_INT 4 >> $@
        echo #define CONF_SOAR_RETE_CREATE 1 >> $@
        echo #define CONF_SOAR_CHUNKING 1 >> $@
        echo #define snprintf _snprintf >> $@
        echo #define vsnprintf _vsnprintf >> $@
        echo typedef unsigned int size_t; >> $@

clean:
        -del *.obj *.dll *.exp *.opt *.exe *.lib *.pdb *.ilk rule.output y.tab.* lex.yy.c .*~ *~

distclean: clean
	-del defs.h

