/* -*- Mode: Text; indent-tabs-mode: nil -*- */

(3) Figure out how to do chunking and/or justification.

(4) Depending on (3), get rid of intermediate data production data
    structures, and have rule.y generate the RETE network data
    structures directly. (Don't want to burn the space on the RCX if
    we don't need to for chunking or some other reason. Plus, this
    would get a fair bit of code _out_ of rete.c)

(7) Implement ``dot attribute'' notation for conditions in rule.y.

(8) Implement conjunctive negative conditions.

(9) Implement semantic verification in rule.y.

(14) Implement the allocator for the runtime.

(15) Fix operator preference semantics s.t. multiple ``worst''
     operators don't end up getting culled.

(16) Fix operator preference semantics s.t. conflicting ``better''
     preferences actually end up creating an operator conflict
     impasses.

(17) Fix architecture s.t. operator tie doesn't repeatedly fire in the
     top-state.

(18) Implement operator conflict detection. It's no-op'd now!

